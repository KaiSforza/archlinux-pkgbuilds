#!/bin/bash
## TODO: Add in flags that change config options
#maurpkg

shopt -s extglob

## Some sane defaults
pkgbuilds="$HOME/aur/"
packagesrepo="$pkglocation"
packagesrepo="/home/wgiokas/.cache/pacman/pkg"
archiverepo="/home/wgiokas/.cache/pacman/pkg/old"
verbose="-v"
reponame="personal"
moreinfo="-i"
packageext=".pkg.tar.gz"
if [[ $UID != 0 ]]; then
    _pacman="sudo pacman"
else 
    echo "You should not be running any of these operations as root!"
    exit 40
fi
pacman_options="-Syu --needed"

## Read config file
if [[ ! -f ~/.config/maurpkg/maurpkg.conf ]]; then
    source /usr/share/maurpkg/maurpkg.conf.example
else
    source ~/.config/maurpkg/maurpkg.conf
fi

if [[ $verbose == no ]]; then
    verbose=""
    moreinfo=""
fi

declare -a packages
declare -i incr
incr=0

build() {
    loc=$(find $pkgbuilds -maxdepth 2 -path "*$1")
    if [[ -z $loc ]]; then
        exit 65;
    fi
    pushd "$loc"
    if [[ ! -f PKGBUILD ]]; then
        exit 67;
    fi
    paccache -m "$archiverepo" -c "$packagesrepo" -k 1 $1
    makepkg -sLc
}
signrepos(){
    pushd "$packagesrepo"
    paccache -m "$archiverepo" -c "$packagesrepo" -k 1
    for f in $1*.pkg.tar.gz; do
        if [[ ! -f "${f}.sig" ]]; then
            gpg --detach-sign "$f"
        fi
    done
    repo-add --sign -n "$packagesrepo/$reponame.db.tar.gz" "$packagesrepo/$1"*$packageext
    repo-add --sign -n -f "$packagesrepo/$reponame.files.tar.gz" "$packagesrepo/$1"*$packageext
}
downloadpkg(){
    if [[ -e $pkgbuilds/$1 ]]; then
        read -p "Overwrite $pkgbuilds/$1? [y/N] " ask;
        if [[ $ask != y ]]; then
            exit 50;
        fi
        cower -ddf -t "$pkgbuilds" $1
    fi
    cower -dd -t "$pkgbuilds" $1
    read -p "Review pkgbuild for $1?" ask;
    if [[ $ask != n ]]; then
        $EDITOR "$pkgbuilds/$1/PKGBUILD"
    fi
}
showhelp(){
cat << EOF
Usage: mgitpkg [operation] <package(s)>
  operation:
    build package(s)  Build a package in $pkgbuilds or subdirectories
    clean <package>   Clean up the cache in $packagesrepo
    update <package>  Check for updates usinc cower
    download package  Download a package to $pkgbuilds using cower
    info package      Return information for a package using pacman and cower
    repo-update <package>   Update the repo located at $packagesrepo
    -h, --help        Print this help output
EOF
return 0
}

case "$1" in
    repo-update)
        shift
        signrepos "$1"
        ;;
    build)
        shift
        if [[ -z $1 ]]; then
            exit 68;
        fi
        for i in $@; do
            build $i
            packages[$incr]=$i
            let incr++
        done
        signrepos "${packages[@]}"
        $_pacman $pacman_options "${packages[@]}"
        ;;
    clean)
        shift
        if [[ -z $1 ]]; then
            paccache -m "$archiverepo" -c "$packagesrepo" -k 1
        fi
        paccache -m "$archiverepo" -c "$packagesrepo" -k 1 $1
        ;;
    update)
        shift
        if [[ -z $1 ]]; then
            cower -u $verbose
            return 0;
        fi
        cower -u $verbose $1
        ;;
    download)
        shift
        if [[ -z $1 ]]; then
            exit 52;
        fi
        downloadpkg $1
        ;;
    info)
        shift
        if [[ -z $1 ]]; then
            exit 51;
        fi
        pacman -Si $1
        cower -i $1
        ;;
    -h|--help)  showhelp
        ;;
    *)          showhelp
        ;;
esac
